{"remainingRequest":"/Users/danoand/Documents/Companies/TenantSmart/POC/bootstrap/WB04HF123/angular6/ng2angle/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/danoand/Documents/Companies/TenantSmart/POC/bootstrap/WB04HF123/angular6/ng2angle/node_modules/ng2-img-cropper/src/model/handle.js","dependencies":[{"path":"/Users/danoand/Documents/Companies/TenantSmart/POC/bootstrap/WB04HF123/angular6/ng2angle/node_modules/ng2-img-cropper/src/model/handle.js","mtime":1498555521000},{"path":"/Users/danoand/Documents/Companies/TenantSmart/POC/bootstrap/WB04HF123/angular6/ng2angle/node_modules/cache-loader/dist/cjs.js","mtime":1529365652000},{"path":"/Users/danoand/Documents/Companies/TenantSmart/POC/bootstrap/WB04HF123/angular6/ng2angle/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1525974352000}],"contextDependencies":[],"result":["import { Point } from './point';\nimport { CropperSettings } from '../cropperSettings';\nvar Handle = /*@__PURE__*/ (function () {\n    function Handle(x, y, radius, settings) {\n        this.cropperSettings = new CropperSettings();\n        this.over = false;\n        this.drag = false;\n        this._position = new Point(x, y);\n        this.offset = new Point(0, 0);\n        this.radius = radius;\n        this.cropperSettings = settings;\n    }\n    Handle.prototype.setDrag = function (value) {\n        this.drag = value;\n        this.setOver(value);\n    };\n    Handle.prototype.draw = function (ctx) {\n        // this should't be empty\n    };\n    Handle.prototype.setOver = function (over) {\n        this.over = over;\n    };\n    Handle.prototype.touchInBounds = function (x, y) {\n        return (x > this.position.x - this.radius + this.offset.x) &&\n            (x < this.position.x + this.radius + this.offset.x) &&\n            (y > this.position.y - this.radius + this.offset.y) &&\n            (y < this.position.y + this.radius + this.offset.y);\n    };\n    Object.defineProperty(Handle.prototype, \"position\", {\n        get: function () {\n            return this._position;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Handle.prototype.setPosition = function (x, y) {\n        this._position.x = x;\n        this._position.y = y;\n    };\n    return Handle;\n}());\nexport { Handle };\n//# sourceMappingURL=handle.js.map\n",null]}